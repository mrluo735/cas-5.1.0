<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/data/mongo
        http://www.springframework.org/schema/data/mongo/spring-mongo.xsd">


    <context:property-placeholder location="classpath:mongo.properties"
                                  ignore-resource-not-found="true"
                                  ignore-unresolvable="false"/>

    <context:annotation-config/>
    <context:component-scan base-package="org.apereo.cas.services" />

    <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>

    <mongo:mapping-converter>
        <mongo:custom-converters>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.LoggerConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.ClassConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.CommonsLogConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.PersonAttributesConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.CacheLoaderConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.RunnableConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.ReferenceQueueConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.ThreadLocalConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.CertPathConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.CacheBuilderConverter"/>
            </mongo:converter>
            <mongo:converter>
                <bean class="org.apereo.cas.services.convert.BaseConverters.CacheConverter"/>
            </mongo:converter>
        </mongo:custom-converters>
    </mongo:mapping-converter>

    <bean id="mappingContext"
          class="org.springframework.data.mongodb.core.mapping.MongoMappingContext"/>

    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate"
          c:mongoDbFactory-ref="mongoDbFactory"
          c:mongoConverter-ref="mappingConverter"/>

    <bean id="mongoServiceRegistryDao" class="org.apereo.cas.services.MongoServiceRegistryDao"
          c:collectionName="MongoServiceRegistryDao"
          c:dropCollection="true"
          c:mongoTemplate-ref="mongoTemplate" />

    <bean id="validationAnnotationBeanPostProcessor" 
          class="org.apereo.cas.util.spring.CustomBeanValidationPostProcessor"
          p:afterInitialization="true"/>

    <!-- Fake in-memory mongo instance -->
    <bean name="fongo" class="com.github.fakemongo.Fongo"
          c:name="InMemoryMongo" />

    <bean id="mongo" factory-bean="fongo" factory-method="getMongo" />
    <mongo:db-factory id="mongoDbFactory" mongo-ref="mongo" />
</beans>
